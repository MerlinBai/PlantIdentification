<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ruoyi.user.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.ruoyi.user.pojo.Teacher" >
    <id column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
    <result column="teacher_pwd" property="teacherPwd" jdbcType="VARCHAR" />
    <result column="teacher_nickname" property="teacherNickname" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="teacher_status" property="teacherStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    teacher_id, teacher_name, teacher_pwd, teacher_nickname, role_id, teacher_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </select>
  <select id="queryOneByNameAndPwd" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where teacher_name = #{uname,jdbcType=VARCHAR} and teacher_pwd=#{upass,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from teacher
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ruoyi.user.pojo.Teacher" >
    insert into teacher (teacher_id, teacher_name, teacher_pwd, 
      teacher_nickname, role_id, teacher_status)
    values (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{teacherPwd,jdbcType=VARCHAR}, 
      #{teacherNickname,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{teacherStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.user.pojo.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="teacherPwd != null" >
        teacher_pwd,
      </if>
      <if test="teacherNickname != null" >
        teacher_nickname,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="teacherStatus != null" >
        teacher_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPwd != null" >
        #{teacherPwd,jdbcType=VARCHAR},
      </if>
      <if test="teacherNickname != null" >
        #{teacherNickname,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="teacherStatus != null" >
        #{teacherStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.user.pojo.Teacher" >
    update teacher
    <set >
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPwd != null" >
        teacher_pwd = #{teacherPwd,jdbcType=VARCHAR},
      </if>
      <if test="teacherNickname != null" >
        teacher_nickname = #{teacherNickname,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="teacherStatus != null" >
        teacher_status = #{teacherStatus,jdbcType=INTEGER},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.user.pojo.Teacher" >
    update teacher
    set teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_pwd = #{teacherPwd,jdbcType=VARCHAR},
      teacher_nickname = #{teacherNickname,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      teacher_status = #{teacherStatus,jdbcType=INTEGER}
    where teacher_id = #{teacherId,jdbcType=INTEGER}
  </update>
</mapper>